////////////////////////////////////////////////////////////////////////////////
//
//  System Name : ACR Spawn System
//     Filename : as_group_i.nss
//      Version : 1.0
//         Date : 2006-9-17
//       Author : Ronan
//
//  Description
//
//  Revision History
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes ////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// This line is required on all spawn group scripts.
#include "acr_spawn_i"
#include "010_spawn_ex"
#include "acr_i"

////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Structures //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Global Variables ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void PerformPerceptionChecks(location lLoc, int nSpotDC, int nListenDC, string sSpotFailMessage, string sSpotSuccessMessage, string sListenFailMessage, string sListenSuccessMessage, int bDisplayRolls = TRUE);

//void AmbushCreature(object oCreature,

////////////////////////////////////////////////////////////////////////////////
// Function Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void PerformPerceptionChecks(location lLoc, int nSpotDC, int nListenDC, string sSpotFailMessage, string sSpotSuccessMessage, string sListenFailMessage, string sListenSuccessMessage, int bDisplayRolls = TRUE) {
	object oPC = GetFirstPC();
	while(GetIsObjectValid(oPC)) {
		float fDistance = GetDistanceBetweenLocations(lLoc, GetLocation(oPC));
		
		if(fDistance > 0.0 && fDistance < 50.0) {
			int nDCMod = fDistance * 3.0 + GetIsInCombat(oPC) ? 5 : 0;
			
			if(GetIsSkillSuccessful(oPC, SKILL_SPOT, nSpotDC + nDCMod, bDisplayRolls))
				FloatingTextStringOnCreature(sSpotSuccessMessage, oPC, FALSE, 6.0);
			else FloatingTextStringOnCreature(sSpotFailMessage, oPC, FALSE, 6.0);
			
			if(GetIsSkillSuccessful(oPC, SKILL_LISTEN, nListenDC + nDCMod, bDisplayRolls))
				FloatingTextStringOnCreature(sListenSuccessMessage, oPC, FALSE, 6.0);
			else FloatingTextStringOnCreature(sListenFailMessage, oPC, FALSE, 6.0);
		}
	
		oPC = GetNextPC();
	}
}	